{"version":3,"sources":["app/mutations.cljs"],"mappings":"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","names":["app.mutations/add-todo","com.fulcrologic.fulcro.mutations/->Mutation","com.fulcrologic.fulcro.mutations/mutate","fulcro-mutation-env-symbol","map__43477","cljs.core/--destructure-map","cljs.core.get","p__43478","map__43479","*after-render*-orig-val__43480","com.fulcrologic.fulcro.raw.components/*after-render*","*after-render*-temp-val__43481","env","*after-render*-orig-val__43482","*after-render*-temp-val__43483","temp__5753__auto__","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","default-action","value","state","new-id","cljs.core/deref","cljs.core.get_in","new-item","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core/assoc","cljs.core/conj","cljs.core/inc","app.mutations/edit-todo","map__43484","*after-render*-orig-val__43485","*after-render*-temp-val__43486","app.mutations/delete-todo","map__43488","p__43489","map__43490","*after-render*-orig-val__43491","*after-render*-temp-val__43492","*after-render*-orig-val__43493","*after-render*-temp-val__43494","id","items","cljs.core/vec","p1__43487#","cljs.core.remove","cljs.core._EQ_","cljs.core/second","cljs.core/dissoc","cljs.core/dec"],"sourcesContent":["(ns app.mutations\n  (:require\n  [com.fulcrologic.fulcro.mutations :as m :refer [defmutation]]))\n\n(defmutation add-todo\n  [{:todo-item/keys [value]}]\n  (action [{:keys [state]}]\n          (let [new-id (inc (get-in @state [:root/todo-list :todo-list/item-count])) new-item {:todo-item/id new-id :todo-item/value value}]\n            (swap! state update-in [:todo-item/id] assoc new-id new-item)\n            (swap! state update-in [:root/todo-list :todo-list/items] conj [:todo-item/id new-id])\n            (swap! state update-in [:root/todo-list :todo-list/item-count] inc)\n            ))\n  (remote [env] true))\n\n\n(defmutation edit-todo [{:keys [state]}]\n  (remote [env] true))\n\n(defmutation delete-todo [{:todo-item/keys [id]}]\n             (action [{:keys [state]}]\n                     (swap! state update-in [:root/todo-list :todo-list/items]\n                            (fn [items] (vec (remove #(= (second %) id) items))))\n                     (swap! state update-in [:todo-item/id] dissoc id)\n                     (swap! state update-in [:root/todo-list :todo-list/item-count] dec))\n             (remote [env] true))\n\n"]}